{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Get Started Welcome to the documentation of the data type registry developed in the scope of the FAIRCORE4EOSC project. The Typeregistry is based on the Cordra software developed by CNRI. Cordra is a software to manage digital objects and equip them with a persistent identifier. These digital objects are represented as JSON objects based on some previously defined JSON schema. In this typeregistry, some schemas are provided to cover many use cases. For more information on the provided schemas, refer to later pages in this documentation. Created types are equipped with a handle PID for unambigous identification of data types. Types can be created via the user interface or an API. For this, Cordra offers a REST API and a DOIP API for HTTP Clients. Documentation for these API's is provided by Cordra and can be found under the Documentation tab on the navigation bar. To get started creating types, an account is necessary. As for now, no login via some external AAI provider is integrated in the typeregistry. Rather, a request has to be send for the admin to create an account for you. To request an account, please send a mail to support@pidconsortium.net . Should you just want to experiment with the provided schemas, we also offer the DTR-Playground . Here, the same interface with the same schemas is provided, but no persistent identifiers are generated for the data types and a user account is not required for the type creation. TypeAPI The TypeAPI is an additional service that is provided as part of the DTR component. Here, further functionalities are supplemented to types of the provided schemas to increase their effective use. These additional functionalities include the generation of validation schemas for types that qualify, filtering of types based on the measurement unit they use or which taxonomy node they are assigned to, and a federated search over mutltiple registries. These additional regisitries currently include the DTR-Test and the DTR-PIT by the pidconsortium. An extensive documentation of all available endpoints can also be found under the Documentation tab on the navigation bar.","title":"Get Started"},{"location":"#get-started","text":"Welcome to the documentation of the data type registry developed in the scope of the FAIRCORE4EOSC project. The Typeregistry is based on the Cordra software developed by CNRI. Cordra is a software to manage digital objects and equip them with a persistent identifier. These digital objects are represented as JSON objects based on some previously defined JSON schema. In this typeregistry, some schemas are provided to cover many use cases. For more information on the provided schemas, refer to later pages in this documentation. Created types are equipped with a handle PID for unambigous identification of data types. Types can be created via the user interface or an API. For this, Cordra offers a REST API and a DOIP API for HTTP Clients. Documentation for these API's is provided by Cordra and can be found under the Documentation tab on the navigation bar. To get started creating types, an account is necessary. As for now, no login via some external AAI provider is integrated in the typeregistry. Rather, a request has to be send for the admin to create an account for you. To request an account, please send a mail to support@pidconsortium.net . Should you just want to experiment with the provided schemas, we also offer the DTR-Playground . Here, the same interface with the same schemas is provided, but no persistent identifiers are generated for the data types and a user account is not required for the type creation.","title":"Get Started"},{"location":"#typeapi","text":"The TypeAPI is an additional service that is provided as part of the DTR component. Here, further functionalities are supplemented to types of the provided schemas to increase their effective use. These additional functionalities include the generation of validation schemas for types that qualify, filtering of types based on the measurement unit they use or which taxonomy node they are assigned to, and a federated search over mutltiple registries. These additional regisitries currently include the DTR-Test and the DTR-PIT by the pidconsortium. An extensive documentation of all available endpoints can also be found under the Documentation tab on the navigation bar.","title":"TypeAPI"},{"location":"schemas/Overview/","text":"name Type Name please use printable ascii characters without blank Type: string path: #/properties/name The value must match this pattern: ^([!-~])+$ Length: \u2264 256 description Description Type: string path: #/properties/description The value must match this pattern: (.| )* Length: \u2264 8192 versioning Versioning Type: object path: #/properties/versioning Properties version Version Type: string path: #/properties/versioning/properties/version previousVersion Previous Version path: #/properties/versioning/properties/previousVersion nextVersion Next Version path: #/properties/versioning/properties/nextVersion provenance Provenance Type: object path: #/properties/provenance Properties contributors Contributors Type: array path: #/properties/provenance/properties/contributors Items Contributor Type: object path: #/properties/provenance/properties/contributors/items Properties Name Name Full name of the contributor Type: string path: #/properties/provenance/properties/contributors/items/properties/Name ORCID ORCID Type: string path: #/properties/provenance/properties/contributors/items/properties/ORCID creationDate Creation Date Type: string path: #/properties/provenance/properties/creationDate String format must be a \"datetime\" lastModificationDate Last Modification Date Type: string path: #/properties/provenance/properties/lastModificationDate String format must be a \"datetime\" ExpectedUse Expected Use Type: string path: #/properties/ExpectedUse String format must be a \"textarea\" Length: \u2264 1024 Aliases Aliases Provide a list of aliases as alternatives to the chosen name. Type: array path: #/properties/Aliases Items Alias Type: string path: #/properties/Aliases/items","title":"Overview"},{"location":"schemas/Overview/#type-name","text":"please use printable ascii characters without blank Type: string path: #/properties/name The value must match this pattern: ^([!-~])+$ Length: \u2264 256 description","title":"Type Name"},{"location":"schemas/Overview/#description","text":"Type: string path: #/properties/description The value must match this pattern: (.| )* Length: \u2264 8192 versioning","title":"Description"},{"location":"schemas/Overview/#versioning","text":"Type: object path: #/properties/versioning Properties version","title":"Versioning"},{"location":"schemas/Overview/#version","text":"Type: string path: #/properties/versioning/properties/version previousVersion","title":"Version"},{"location":"schemas/Overview/#previous-version","text":"path: #/properties/versioning/properties/previousVersion nextVersion","title":"Previous Version"},{"location":"schemas/Overview/#next-version","text":"path: #/properties/versioning/properties/nextVersion provenance","title":"Next Version"},{"location":"schemas/Overview/#provenance","text":"Type: object path: #/properties/provenance Properties contributors","title":"Provenance"},{"location":"schemas/Overview/#contributors","text":"Type: array path: #/properties/provenance/properties/contributors Items","title":"Contributors"},{"location":"schemas/Overview/#contributor","text":"Type: object path: #/properties/provenance/properties/contributors/items Properties Name","title":"Contributor"},{"location":"schemas/Overview/#name","text":"Full name of the contributor Type: string path: #/properties/provenance/properties/contributors/items/properties/Name ORCID","title":"Name"},{"location":"schemas/Overview/#orcid","text":"Type: string path: #/properties/provenance/properties/contributors/items/properties/ORCID creationDate","title":"ORCID"},{"location":"schemas/Overview/#creation-date","text":"Type: string path: #/properties/provenance/properties/creationDate String format must be a \"datetime\" lastModificationDate","title":"Creation Date"},{"location":"schemas/Overview/#last-modification-date","text":"Type: string path: #/properties/provenance/properties/lastModificationDate String format must be a \"datetime\" ExpectedUse","title":"Last Modification Date"},{"location":"schemas/Overview/#expected-use","text":"Type: string path: #/properties/ExpectedUse String format must be a \"textarea\" Length: \u2264 1024 Aliases","title":"Expected Use"},{"location":"schemas/Overview/#aliases","text":"Provide a list of aliases as alternatives to the chosen name. Type: array path: #/properties/Aliases Items","title":"Aliases"},{"location":"schemas/Overview/#alias","text":"Type: string path: #/properties/Aliases/items","title":"Alias"},{"location":"schemas/basictype/","text":"BasicInfoType mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"BasicInfoType"},{"location":"schemas/basictype/#basicinfotype","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"BasicInfoType"},{"location":"schemas/infotype/","text":"InfoType mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"InfoType"},{"location":"schemas/infotype/#infotype","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"InfoType"},{"location":"schemas/measurementunit/","text":"MeasurementUnit mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"MeasurementUnit"},{"location":"schemas/measurementunit/#measurementunit","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"MeasurementUnit"},{"location":"schemas/taxonomynode/","text":"TaxonomyNode mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"TaxonomyNode"},{"location":"schemas/taxonomynode/#taxonomynode","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"TaxonomyNode"}]}